version: '3.8'
services:
  # Administration Api
  promocode-factory-administration-api:
    build: src/Otus.Teaching.Pcf.Administration/
    container_name: 'promocode-factory-administration-api'
    restart: always
    ports:
      - "8091:80"
    environment:
      - "ConnectionStrings:PromocodeFactoryAdministrationDb=Host=promocode-factory-administration-db;Database=promocode_factory_administration_db;Username=postgres;Password=docker"          
    depends_on: 
      - promocode-factory-administration-db

  # Administration Db
  promocode-factory-administration-db:
    image: "postgres:16"
    container_name: 'promocode-factory-administration-db'
    restart: always 
    ports:
      - 5433:5432
    environment: 
      - POSTGRES_PASSWORD=docker

  # ReceivingFromPartner Api
  promocode-factory-receiving-from-partner-api:
    build: src/Otus.Teaching.Pcf.ReceivingFromPartner/
    container_name: 'promocode-factory-receiving-from-partner-api'
    restart: always
    ports:
      - "8092:80"
    environment:
      - "ConnectionStrings:PromocodeFactoryReceivingFromPartnerDb=Host=promocode-factory-receiving-from-partner-db;Database=promocode_factory_receiving_from_partner_db;Username=postgres;Password=docker"
      - "IntegrationSettings:GivingToCustomerApiUrl=http://promocode-factory-giving-to-customer-api"    
      - "IntegrationSettings:AdministrationApiUrl=http://promocode-factory-administration-api"       
    depends_on: 
      - promocode-factory-receiving-from-partner-db

  # ReceivingFromPartner Db
  promocode-factory-receiving-from-partner-db:
    image: "postgres:16"
    container_name: 'promocode-factory-receiving-from-partner-db'
    restart: always 
    ports:
      - 5434:5432
    environment: 
      - POSTGRES_PASSWORD=docker
    volumes:
      - postgres_data:/var/lib/postgresql/data


  
  # GivingToCustomer Api
  promocode-factory-giving-to-customer-api:
    build: src/Otus.Teaching.Pcf.GivingToCustomer/
    container_name: 'promocode-factory-giving-to-customer-api'
    restart: always
    ports:
      - "8093:80"
    environment:
      - "ConnectionStrings:PromocodeFactoryGivingToCustomerDb=Host=promocode-factory-giving-to-customer-db;Database=promocode_factory_giving_to_customer_db;Username=postgres;Password=docker"          
    depends_on: 
      - promocode-factory-giving-to-customer-db

  # GivingToCustomer Db
  promocode-factory-giving-to-customer-db:
    image: "postgres:16"
    container_name: 'promocode-factory-giving-to-customer-db'
    restart: always 
    ports:
      - 5435:5432
    environment: 
      - POSTGRES_PASSWORD=docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
 
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # для подключения клиентов RabbitMQ
      - "15672:15672"  # для подключения к веб-интерфейсу управления
    environment:
      RABBITMQ_DEFAULT_USER: user  # замените на ваше имя пользователя
      RABBITMQ_DEFAULT_PASS: password  # замените на ваш пароль
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  rabbitmq_data:
  postgres_data: